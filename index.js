// Generated by CoffeeScript 1.9.1
var cache, extend, layers;

extend = require('extend');

layers = require('odo-layers');

cache = require('odoql-exe/cache');

module.exports = function(el, component, exe, options) {
  var Relay, _cache, _memory, _scene, _state, update;
  _scene = null;
  _memory = {};
  _state = layers();
  update = function() {
    if (_scene == null) {
      return Relay.mount();
    }
    return _scene.update(_state.get(), _memory);
  };
  _cache = cache(exe);
  _cache.on('ready', update);
  _cache.on('result', _state.apply);
  if (options.queries != null) {
    _cache.apply(options.queries);
  }
  if (options.state != null) {
    _state.apply(options.state);
  }
  Relay = {
    mount: function() {
      return _scene = component.mount(el, _state.get(), _memory, options);
    },
    update: function(params) {
      extend(_memory, params);
      return _cache.run(component.query(_memory));
    },
    layer: _state.layer,
    params: function() {
      return _memory;
    },
    state: function() {
      return _state.get();
    },
    unmount: function() {
      _scene.unmount();
      return _scene = null;
    }
  };
  return Relay;
};
