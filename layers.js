// Generated by CoffeeScript 1.8.0
var extend;

extend = require('extend');

module.exports = function(initialState) {
  var _layers, _state;
  _state = {};
  _layers = [];
  if (initialState != null) {
    extend(_state, initialState);
  }
  return {
    apply: function(diff) {
      return extend(_state, diff);
    },
    clear: function() {
      return _state = {};
    },
    get: function() {
      var layer, result, _i, _len;
      result = {};
      extend(result, _state);
      for (_i = 0, _len = _layers.length; _i < _len; _i++) {
        layer = _layers[_i];
        extend(result, layer);
      }
      return result;
    },
    layer: function(layer) {
      _layers.push(layer);
      return {
        rollback: function() {
          index(_layers.indexOf(layer));
          return _layers.splice(index, 1);
        },
        commit: function() {
          index(_layers.indexOf(layer));
          _layers.splice(index, 1);
          return extend(_state, layer);
        }
      };
    }
  };
};
